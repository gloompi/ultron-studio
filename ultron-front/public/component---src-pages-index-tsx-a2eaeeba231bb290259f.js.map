{"version":3,"sources":["webpack:///./src/components/home/section-1.tsx","webpack:///./src/hooks/use-slides.ts","webpack:///./src/pages/index.tsx"],"names":["sectionStyle","slidesStyle","slideStyle","Section1","slides","response","errors","Error","allMdx","nodes","map","slide","slug","frontmatter","title","label","body","excerpt","useSlides","css","key","IndexPage"],"mappings":"wtBAuBMA,EAAe,CAAH,sDAKZC,EAAc,CAAH,iFAOXC,EAAa,CAAH,wGAQDC,EAtCM,WACnB,IAAMC,ECYO,WACb,IAAMC,EAAsB,OAe5B,GAAIA,EAASC,OACX,MAAM,IAAIC,MAAM,+BAGlB,OAAOF,EAASG,OAAOC,MAAMC,KAAI,SAAAC,GAAK,MAAK,CACzCC,KAAMD,EAAME,YAAYD,KACxBE,MAAOH,EAAME,YAAYC,MACzBC,MAAOJ,EAAME,YAAYE,MACzBC,KAAML,EAAMM,YDpCCC,GAEf,OACE,uBAASC,IAAKnB,GACZ,kBAAImB,IAAKlB,GACNG,EAAOM,KAAI,gBAAGE,EAAH,EAAGA,KAAME,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KAAvB,OACV,kBAAII,IAAKR,EAAMO,IAAKjB,GAClB,sBAAKa,GACL,sBAAKD,GACL,qBAAIE,UEFDK,UAPO,kBACpB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKP,MAAM,SACX,YAAC,EAAD","file":"component---src-pages-index-tsx-a2eaeeba231bb290259f.js","sourcesContent":["import React, { FC } from 'react';\nimport { css } from '@emotion/core';\n\nimport useSlides from 'hooks/use-slides';\n\nconst Section1: FC = () => {\n  const slides = useSlides();\n\n  return (\n    <section css={sectionStyle}>\n      <ul css={slidesStyle}>\n        {slides.map(({ slug, title, label, body }) => (\n          <li key={slug} css={slideStyle}>\n            <h5>{label}</h5>\n            <h3>{title}</h3>\n            <p>{body}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nconst sectionStyle = css`\n  width: 100%;\n  min-height: 100vh;\n`;\n\nconst slidesStyle = css`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n`;\n\nconst slideStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n`;\n\nexport default Section1;\n","import { useStaticQuery, graphql } from 'gatsby';\n\ninterface ISlide {\n  frontmatter: {\n    slug: string;\n    title: string;\n    label: string;\n  };\n  excerpt: string;\n}\n\ninterface IResponse {\n  allMdx: {\n    nodes: ISlide[];\n  };\n  errors?: Error;\n}\n\nexport default () => {\n  const response: IResponse = useStaticQuery(graphql`\n    query {\n      allMdx {\n        nodes {\n          frontmatter {\n            slug\n            title\n            label\n          }\n          excerpt\n        }\n      }\n    }\n  `);\n\n  if (response.errors) {\n    throw new Error('error while fetching slides');\n  }\n\n  return response.allMdx.nodes.map(slide => ({\n    slug: slide.frontmatter.slug,\n    title: slide.frontmatter.title,\n    label: slide.frontmatter.label,\n    body: slide.excerpt,\n  }));\n};\n","import React, { FC } from 'react';\n\nimport Layout from 'components/common/layout';\nimport SEO from 'components/common/seo';\nimport Section1 from 'components/home/section-1';\n\nconst IndexPage: FC = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Section1 />\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}